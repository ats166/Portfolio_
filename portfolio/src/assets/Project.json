{
  "ProjectList": [
    {
      "id": 1,
      "e_name": "Willump-TV",
      "k_name": "윌럼프 티비",
      "starttime": "2022-11-16",
      "endtime": "2022-11-24",
      "Week": "1주",
      "result": "",
      "overview": "사용자 맞춤 영화 추천 서비스",
      "skills": ["Vue2.js", "Bootstrap"],
      "link": [
        "../../../assets/Vuelogo.png",
        "../../../assets/Bootstraplogo.png"
      ],
      "skillsReason": [
        "사용자 경험을 위해 SPA를 구현하고자 했고, 첫 웹 개발을 함에 있어 직관적인 문법을 통해 비교적 낮은 진입장벽을 요구하기에 Vue를 선택했습니다.",
        "가장 유명하고 사용하기 쉬우며 반응형 웹사이트를 구현하기 위해 사용했습니다"
      ],
      "role": "Front-End",
      "contribution": "60%",
      "personnel": "2명 (프론트엔드 1명, 백엔드 1명)",
      "summary": "사용자들의 활동 로그를 분석하여, 해당 사용자들의 취향을 파악하고, \n 그에 따라 적합한 영화를 추천해 주는 서비스입니다.",
      "function": {
        "idid": {
          "회원": [0, 1, 2, 3],
          "영화": [1, 2, 3, 4],
          "게시판": [0, 1]
        },
        "category": ["회원", "영화", "게시판"],
        "content": {
          "회원": [
            "회원가입",
            "로그인 및 로그아웃",
            "프로필 이미지 등록 및 변경",
            "포인트를 통한 UI 변경"
          ],
          "영화": [
            "사용자 활동 기반 맞춤 영화 추천",
            "영화 검색 기능",
            "장르별 영화 정렬",
            "디테일 내 유튜브 영상 제공",
            "디테일 내 댓글 작성 기능"
          ],
          "게시판": [
            "특정 영화 디테일에 대한 게시글 작성",
            "게시글 이미지 첨부"
          ]
        }
      },
      "trouble": {
        "troublename": ["새로고침", "Carousel"],
        "troublereason": [
          "영화 검색을 통해 리스트 조회 시 새로고침을 누르게 되면 store에 저장되어있는 Input 데이터를 잃어 404 page로 이동하는 현상 발생",
          "영화 리스트를 효과적으로 보여주기 위해 캐러셀을 선택했고 해당 기능 구현방법에 대해 고민"
        ],
        "troubleanswer": [
          "vuex-persistedstate 라이브러리를 이용한 state와 localstorage를 지속적으로 동기화를 통해 데이터를 유지시킴",
          "BootstrapVue에서 제공하는 라이브러리를 통해 효과적으로 다중 영화 캐러셀, 단일 영화 캐러셀을 구현함"
        ],
        "troubleimg": []
      },
      "other": {
        "othername": ["결과", "느낀 점", "신경 썼던 점"],
        "othercontent": [
          "- Vue2와 Vuex의 이해도 향상 \n - REST API에 대한 이해도 향상 \n - Vue의 LifeCycle에 대한 이해도 향상 \n - 비동기 요청에 대한 이해도 향상 \n - SPA에 대한 이해도 향상",
          "- 설계의 중요성 \n 프로젝트를 진행하면서 가장 힘들었던 점은 설계를 제대로 하지 않은 것이라고 생각합니다. \n 일주일이라는 짧은 기간 동안 개발을 진행했어야 했기에 설계에 충분한 시간을 투자하지 못했고 그 결과, 미흡한 설계로 인해 테이블 구조를 엎는 일이 빈번하게 발생했습니다. \n 이로 인해, 후에 추가적인 기능 또한 구현할 수 없었고 서비스를 제공하는 데에 있어서 최소한의 기능만을 구현할 수 있었습니다. \n 이번 프로젝트를 통해 저희는 제대로 된 설계의 중요성과 설계에 충분한 시간을 할애해야 한다는 것을 깨달았습니다.",
          "저희는 페이지 이동이나 데이터 전송 등에서 기능적인 오류가 발생하지 않도록 최대한 신경 써서 개발했고, 익숙한 UI를 제공하기 위해 친숙한 캐릭터를 사용함으로써 Willump-TV만의 차별화된 전략을 사용했습니다."
        ]
      }
    },
    {
      "id": 2,
      "e_name": "Zzalu",
      "k_name": "짤루",
      "starttime": "2023-01-03",
      "endtime": "2023-02-17",
      "Week": "7주",
      "result": "우수상",
      "overview": "GIF를 활용한 모바일 웹 SNS 서비스",
      "skills": ["Vue3.js", "Tailwind", "PostCSS", "Figma", "Jira", "GitLab"],
      "link": [
        "../../../assets/Vuelogo.png",
        "../../../assets/Tailwindlogo.png",
        "../../../assets/PostCSSlogo.png",
        "../../../assets/Figmalogo.png",
        "../../../assets/Jiralogo.png",
        "../../../assets/GitLablogo.png"
      ],
      "skillsReason": [
        "Vue3를 협업에서 어떤식으로 사용하는지에 대해 React로 프로젝트를 진행 하기 전에 정확하게 알고 사용하고 싶어서 사용했습니다. 실제로 Vuex의 Store 모듈화를 통해 원활한 협업을 진행했습니다.",
        "Tailwind는 Bootstrap보다 높은 자유도를 제공해주며 2022년 기준 CSS 프레임워크 사용 만족도 1위를 달리고 있어 사용했습니다. 개인적으로 굉장히 만족하는 프레임워크입니다.",
        "PostCSS의 다양한 플러그인을 사용하여 CSS 코드의 커스터마이징을 쉽게하기 위해 사용했습니다.",
        "팀원과 프로젝트를 기획, 설계할 때, 보다 효율적인 협업을 위해 디자인 툴이 필요하다고 생각했습니다. 프론트와는 디자인에 대한 아이디어를 검증 및 디자인의 통일성을 가져갈 수 있었으며, 백엔드에서는 피그마 디자인과 와이어 프레임을 보고 프론트의 개발과정을 이해하고 프론트엔드와 백엔드와의 원활한 소통을 위해 사용했습니다.",
        "지라의 Agile 방법론을 통해 팀원의 일정을 보다 구체적으로 관리하고 업무의 우선순위를 정하여 업무를 효율적으로 처리하기 위해 사용했습니다. 저는 해당 프로젝트에서 Front-end의 지라 담당자로 활동했으며 프론트 엔드의 전체적인 일정 관리를 맡았습니다.",
        "Git은 협업에 있어 필수적인 도구이며, Git 기반으로 한 GitLab을 통해 팀원 전체의 코드 관리와 버전 관리를 위해 사용하였습니다. 또한 코드 리뷰를 통해 코드 품질을 높이고, 리뷰 후 변경사항을 Git 담당자를 통해 승인을 받고 Merge를 진행함으로써, 코드 품질을 보장하였습니다."
      ],
      "role": "Front-End",
      "contribution": "20%",
      "personnel": "6명 (프론트엔드 3명, 백엔드 3명)",
      "summary": "ZZal + U, 짤과 너를 잇다라는 뜻인 Zzalu는 Z세대를 위한 모바일 웹 SNS 서비스로 \n GIF(움짤) 공유, 탐색 및 고독방(채팅방) 그리고 제목학원으로 드립력을 뽐낼 수 있는 공간입니다. \n ",
      "function": {
        "category": [
          "회원",
          "메인페이지",
          "제목학원",
          "고독방",
          "검색모달창",
          "GIF",
          "기타"
        ],
        "idid": {
          "회원": [7],
          "메인페이지": [1, 2, 3],
          "제목학원": [],
          "고독방": [0, 1, 2, 3, 4, 5, 6],
          "검색모달창": [0, 1, 2, 3, 4, 5, 6, 7],
          "GIF": [4],
          "기타": [0, 1]
        },
        "content": {
          "회원": [
            "이메일 인증을 통한 회원가입",
            "로그인 및 로그아웃",
            "프로필 이미지 등록 및 변경",
            "유저 정보 수정 및 탈퇴",
            "타유저 팔로워 / 팔로잉",
            "취향에 따른 짤BTI 확인",
            "제목학원 수상내역 확인",
            "보드 관리",
            "관리자 권한"
          ],
          "메인페이지": [
            "제목학원 수상자 기록 저장",
            "사용자 맞춤 추천 GIF 리스트 제공",
            "오늘의 인기 GIF 리스트 제공",
            "오늘의 인기 고독방 리스트 제공"
          ],
          "제목학원": [
            "하루단위로 갱신되는 이미지",
            "실시간 댓글 작성 및 삭제",
            "실시간 댓글 알림",
            "댓글 좋아요 및 좋아요취소",
            "실시간 댓글 좋아요수 확인",
            "좋아요 인기순 정렬"
          ],
          "고독방": [
            "다양한 필터를 통한 고독방 필터링",
            "고독방 생성",
            "고독방 좋아요수, 최근대화시간, 해시태그 등 여러 정보 확인가능",
            "실시간 채팅",
            "채팅 시 작성시간 표시",
            "내 채팅, 다른 사람의 채팅 구분",
            "방장은 방장표시"
          ],
          "검색모달창": [
            "모달창 열 때 마다 랜덤 GIF 불러오기",
            "롱클릭 시 보드 저장 여부 확인 가능",
            "롱클릭 시 조회수 확인 가능",
            "클릭 시 GIF 디테일 페이지",
            "무한스크롤을 통한 GIF 더 보기",
            "검색 기능",
            "채팅방 내부에선 내 보드 접근 가능",
            "채팅방 내부에선 클릭 시 채팅방에 GIF 전송"
          ],
          "GIF": [
            "디테일 페이지에서 조회수 확인 가능",
            "디테일 페이지에서 해당 GIF의 유래 확인 가능",
            "디테일 페이지에서 해당 GIF의 원본 출처 확인 가능",
            "디테일 페이지 수정 시 마지막으로 수정한 날짜와 유저네임 표시",
            "관리자에게 디테일 페이지 내용 수정 요청",
            "관리자에게 GIF 업로드 요청 가능"
          ],
          "기타": [
            "다크모드 사용 시 모든 UI가 다크모드르 변경",
            "내 보드 CRUD",
            "관리자일 때, GIF 수정 및 업로드 요청을 보고 승인 및 거부 기능"
          ]
        }
      },
      "trouble": {
        "troublename": [
          "채팅방",
          "모달 외부 클릭",
          "무한스크롤 vs 페이지네이션",
          "디바운스 vs 쓰로틀링"
        ],
        "troublereason": [
          "채팅방을 구현하기 위해 실시간 통신 연결과 실시간 통신시 가끔 연결이 끊기는 문제",
          "검색모달과 보드모달이 생성되었을 때, 사용자 경험을 위해 외부를 클릭하면 모달창이 꺼지게 하는 코드 작성에 대한 어려움",
          "검색 모달의 효과적인 정보 제공을 위해 페이지네이션과 무한 스크롤에 대해 고민",
          "무한 스크롤 선택 후, 요청을 디바운스와 쓰로틀링 중 어떤 것을 사용해야 하는지에 대한 고민"
        ],
        "troubleanswer": [
          "- socket.io와 stomp를 PUB/SUB 구조를 통한 채팅방 구현 \n - 연결이 실패했을 때, 다시 재접속 요청을 보내서 연결 시도",
          "DOM 조작을 통해 클릭한 부분이 모달창 외부인지 확인 후 외부라면 모달창을 끄는 함수 실행",
          "- 모바일 웹 특성상 페이지 클릭보단 스크롤을 통해 스크롤이 최하단에 도착 했을 때, 추가적인 데이터를 불러오는게 적절하고 판단했습니다. \n - DOM 조작을 통해 보고 있는 화면이 요소의 제일 바닥인지 확인 후, 추가적인 데이터를 불러오는 함수 실행",
          "- 매 입력시 마다 서버에 요청을 보내면 서버에 부담이 더해지기 때문에 해당 이슈를 해결하기위해 디바운스와 쓰토를링에 대해 고민했습니다. \n - 이벤트 발생 후 일정시간 동안 다른 이벤트가 발생하지 않으면 마지막 이벤트가 실행되는 디바운스와 이벤트 실행 후 일정 시간동안 동일한 이벤트가 발생하지 않게하는 쓰로틀링 중 검색기능과 디바운스가 더 어울리다고 판단하여 lodash 라이브러리를 통한 디바운스를 구현했습니다."
        ],
        "troubleimg": []
      },
      "other": {
        "othername": ["결과", "느낀 점"],
        "othercontent": [
          "- Vue3와 Vuex의 이해도 향상 \n - Composition API에 대한 이해도 향상 \n - GitLab을 통한 협업 기술 획득 \n - 웹 디자인 트랙 최우수상 수여",
          "- UX/UI의 중요성 \n 이번 프로젝트 에서는 UI를 어떻게 배치하여 사용자 경험을 높일 수 있는지에 대해 설계 단계부터 많은 고민을 하였습니다. \n Figma를 활용하여 디자인을 진행하였고, 다양한 피드백을 수용하였고 Primary 색상과 통일된 디자인과 폰트를 사용하여 사용자의 편의성과 직관성을 고려해보며 UX/UI의 중요성에 대해 많은 걸 배웠습니다. \n\n - JIRA를 통한 일정관리 \n 해당 프로젝트에서 JIRA를 통해 프론트엔드의 일정 관리를 담당하였습니다. \n 이슈들을 관리하며 개발해야 할 기능과 기간이 정해져 있을 때 우선순위를 정하는 것이 굉장히 중요하다는 점을 깨달았습니다. \n 우선순위를 정하면 구현해야 할 기능들이 명확하게 정리되어 더욱 효율적으로 일을 처리할 수 있었고, 우선순위를 정하며 기능을 구현하기 위해 학습해야 할 정보들이 한눈에 보였고, 이로 인해 불필요한 검색 시간을 절약하고, 기능 구현 속도를 높일 수 있었습니다. 수정할거임"
        ]
      }
    },
    {
      "id": 3,
      "e_name": "Returnz",
      "k_name": "리턴즈",
      "starttime": "2023-02-20",
      "endtime": "2023-04-07",
      "Week": "7주",
      "result": "우수상",
      "overview": "과거 데이터 기반 모의 주식 투자 게임 서비스",
      "skills": [
        "React",
        "Redux",
        "React-Query",
        "styled-components",
        "Tailwind",
        "GitLab",
        "Figma",
        "Jira"
      ],
      "link": [
        "../../../assets/Reactlogo.png",
        "../../../assets/Reduxlogo.png",
        "../../../assets/ReactQuerylogo.png",
        "../../../assets/StyledComponentslogo.png",
        "../../../assets/Tailwindlogo.png",
        "../../../assets/GitLablogo.png",
        "../../../assets/Figmalogo.png",
        "../../../assets/Jiralogo.png"
      ],
      "skillsReason": [
        "현재 시장에서 가장 많이 사용하는 프론트엔드 프레임워크이고 다양한 라이브러리와 다양한 정보가 있는 커뮤니티가 활발하게 활동하고 있다는 장점을 가지고 있어 해당 프로젝트에서 React를 사용했습니다.",
        "동일한 데이터를 서버에 여러 번 요청하여 서버 리소스가 낭비 되는 것을 방지하고 컴포넌트 간 데이터 전송 관계가 복잡해지면 유지보수가 어려워질 것이라 생각해 Redux를 이용하여 필요한 데이터들을 집중 관리하기 위해 사용했습니다.",
        "React-Query를 이용하여 외부 api를 주기적으로 호출하여 새로운 상태로 업데이트를 하되, 잦은 중복 호출은 지양하기 위해 사용했습니다.",
        "테일윈드",
        "스타일드컴포넌트",
        "Git Flow를 사용한 버전 관리를 진행했습니다",
        "피그마",
        "지라"
      ],
      "role": "Front-End",
      "contribution": "20%",
      "personnel": "6명 (프론트엔드 3명, 백엔드 3명)",
      "summary": "Returnz는 \"특정 과거에 돌아간다면 주식으로 성공할 수 있을까?\" 라는 주제로 만든 게임형 주식교육 서비스입니다. \n 주식 초보를 위한 최대한 UI를 통한 최고의 UX 제공 및 도움말과 실시간 채팅을 통해 소통하는게 특징입니다.",
      "function": {
        "category": [
          "회원",
          "메인페이지",
          "튜토리얼",
          "사이드바",
          "대기방",
          "게임방1",
          "게임방2",
          "결과페이지"
        ],
        "idid": {
          "회원": [0, 1],
          "메인페이지": [],
          "튜토리얼": [0],
          "사이드바": [],
          "대기방": [],
          "게임방1": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "게임방2": [0, 1, 2, 3, 4, 5, 6],
          "결과페이지": []
        },
        "content": {
          "회원": [
            "회원가입",
            "로그인 및 로그아웃",
            "업적에 따른 프로필이미지 제공",
            "평균 수익률 표시"
          ],
          "메인페이지": [
            "실시간 달러, 엔, 유로, 비트코인, 원유 정보 제공",
            "유저들의 수익률 랭킹 표시",
            "오늘의 추천 종목 표시",
            "금융관련 단어 소개"
          ],
          "튜토리얼": ["게임 진행방식 설명"],
          "사이드바": [
            "유저 닉네임을 검색하여 친구 추가",
            "친구요청 수락 및 거절",
            "게임초대 수락 및 거절",
            "실시간 친구의 온/오프라인 상태 확인 가능"
          ],
          "대기방": [
            "주어진 여러가지 테마 설정 가능",
            "테마에 관한 간단한 설명",
            "사용자설정으로 유저가 원하는 시간 설정 가능",
            "친구 초대 기능",
            "실시간 채팅 기능",
            "초대된 유저의 평균 수익률 확인 가능"
          ],
          "게임방1": [
            "해당 게임 기준 날의 환율, 한국금리, 미국금리 표시",
            "각 컴포넌트별 도움말 표시",
            "게임에 상장종목 랜덤으로 10개 표시",
            "전턴대비 상승, 하락 대비 표시",
            "매수, 매도 시 모달 표시",
            "자신이 보유한 종목 표시",
            "평가손익, 매도가능(보유 수), 손익률, 평균단가, 평가금, 매입금 표시",
            "보유종목 전턴대비 상승, 하락 대비 표시"
          ],
          "게임방2": [
            "현재 턴 표시 및 남은시간 표시",
            "현재 턴 남은시간 표시",
            "주식 그래프, 거래량 시각화",
            "선택된 종목의 간략한 소개",
            "선택된 종목의 주가 정보",
            "선택된 종목의 해당하는 날짜의 뉴스",
            "게임에 참여한 유저들의 총 평가자산 및 등수 표시",
            "준비 기능 및 모든 유저가 준비가 되면 다음 턴으로 넘어감",
            "게임 내 유저끼리 실시간 채팅"
          ],
          "결과페이지": [
            "최종 등수 확인",
            "업적에 따른 프로필 이미지 해금",
            "선택한 유저의 수익률 추이 그래프와 턴 매수, 매도 데이터 확인"
          ]
        }
      },
      "trouble": {
        "troublename": ["다량의 데이터 처리", "효과적인 시각화"],
        "troublereason": [
          "주식 데이터를 다루다보니 한번의 요청에 엄청나게 많은 양의 데이터가 필요했고, 이를 효과적으로 처리하기 위한 방법을 모색",
          "페르소나인 주식 초보자의 눈높이에 맞춰 어떤 데이터를 빼고 어떤 데이터가 필요한지에 대해 고민"
        ],
        "troubleanswer": [
          "다량의 데이터들을 전역상태관리 툴인 Redux를 통한 필요한 데이터끼리 묶어서 효과적으로 관리했습니다.",
          "- 주식 그래프는 ApexChart 라이브러리를 통해 초보자도 쉽게 알아 볼 수 있도록 시각화 진행 \n - 튜토리얼 제공과 각 컴포넌트 별로 도움말을 추가해 해당 컴포넌트가 어떤 정보를 담고 있는지 어떻게 이용하는지에 대해 설명해주었습니다. "
        ],
        "troubleimg": []
      },
      "other": {
        "othername": ["결과", "느낀 점"],
        "othercontent": [
          "- React와 Redux의 이해도 향상 \n - Vue와 React의 차이에 대한 이해도 향상 \n - 컴포넌트 모듈화를 통한 재사용성 향상 기술 습득 \n - 빅데이터 분산 트랙 우수상 수여",
          "- Git-flow \n 해당 프로젝트에서는 Git-flow 전략을 사용하며 기능 개발과 버그 수정 등을 분업화하여 진행함으로써 이전보다 더욱 안정적으로 버전 관리를 할 수 있었습니다. \n\n - Prettier & Airbnb Convention \n 해당 프로젝트에서 개발 코드의 일관성을 유지하고 가독성을 높이며 유지보수를 용이하게 할 수 있도록 Prettier와 Airbnb Convention을 이용해 개발하였습니다. \n 덕분에 코드 리뷰를 진행하는 시간이 단축되었으며 팀원이 기능 구현을 한 부분도 쉽게 유지보수를 진행할 수 있었습니다. \n\n - 기술 공유 \n 같은 프로젝트를 진행하더라도, 각자 구현한 기능이 다르기 때문에 바쁜 일정 속에서 관심을 갖지 않으면 그냥 지나칠 수 있을 것이라고 생각했습니다. \n 이에 저는 팀원들과 함께 주기적으로 기술을 공유하는 시간을 가졌고, 이러한 기술 공유 시간을 통해 팀원들의 역량 향상과 더 나은 문제 해결 방법을 찾는데 도움이 되었습니다."
        ]
      }
    },
    {
      "id": 4,
      "e_name": "Bud:Diary",
      "k_name": "버디어리",
      "starttime": "2023-04-10",
      "endtime": "2023-05-19",
      "Week": "6주",
      "result": "",
      "overview": "키워드 기반 일기메이트 추천 서비스",
      "skills": [
        "React",
        "Redux",
        "styled-components",
        "Tailwind",
        "GitLab",
        "Figma",
        "Jira"
      ],
      "link": [
        "../../../assets/Reactlogo.png",
        "../../../assets/Reduxlogo.png",
        "../../../assets/StyledComponentslogo.png",
        "../../../assets/Tailwindlogo.png",
        "../../../assets/GitLablogo.png",
        "../../../assets/Figmalogo.png",
        "../../../assets/Jiralogo.png"
      ],
      "skillsReason": [
        "리액트",
        "리덕스",
        "테일윈드",
        "스타일드컴포넌트",
        "깃랩",
        "피그마",
        "지라"
      ],
      "role": "Front-End",
      "contribution": "16%",
      "personnel": "6명 (프론트엔드 4명, 백엔드 2명)",
      "summary": "사용자들의 활동 로그를 분석하여, 해당 사용자들의 취향을 파악하고, \n 그에 따라 적합한 영화를 추천해 주는 서비스",
      "function": {
        "category": [
          "회원",
          "메인페이지",
          "그룹일기",
          "일기작성",
          "상점",
          "마이페이지",
          "기타"
        ],
        "idid": {
          "회원": [],
          "메인페이지": [],
          "그룹일기": [],
          "일기작성": [],
          "상점": [],
          "마이페이지": [],
          "기타": []
        },
        "content": {
          "회원": [
            "OAuth를 통한 회원가입 및 로그인, 로그아웃",
            "프로필 이미지 등록 및 변경",
            "유저 정보 수정 및 탈퇴",
            "최초 로그인이면 설문조사 진행",
            "활동 로그에 따른 포인트 관리"
          ],
          "메인페이지": ["서비스 소개"],
          "그룹일기": [
            "키워드 기반 유저 추천",
            "취향 기반 유저 추천",
            "내가 속해있는 그룹 일기 리스트"
          ],
          "일기작성": [
            "보유중인 스티커 조회",
            "일기 작성 후 요소에 스티커 부착",
            "일기 작성"
          ],
          "상점": ["스티커 조회", "스티커 구매"],
          "마이페이지": [],
          "기타": ["완전 반응형 UI"]
        }
      },
      "trouble": {
        "troublename": ["다량의 데이터 처리", "효과적인 시각화"],
        "troublereason": [
          "주식 데이터를 다루다보니 한번의 요청에 엄청나게 많은 양의 데이터가 필요했고, 이를 효과적으로 처리하기 위한 방법을 모색",
          "페르소나인 주식 초보자의 눈높이에 맞춰 어떤 데이터를 빼고 어떤 데이터가 필요한지에 대해 고민"
        ],
        "troubleanswer": [
          "다량의 데이터들을 전역상태관리 툴인 Redux를 통한 필요한 데이터끼리 묶어서 효과적으로 관리했습니다.",
          "- 주식 그래프는 ApexChart 라이브러리를 통해 초보자도 쉽게 알아 볼 수 있도록 시각화 진행 \n - 튜토리얼 제공과 각 컴포넌트 별로 도움말을 추가해 해당 컴포넌트가 어떤 정보를 담고 있는지 어떻게 이용하는지에 대해 설명해주었습니다. "
        ],
        "troubleimg": []
      },
      "other": {
        "othername": ["결과", "느낀 점"],
        "othercontent": [
          "- React와 Redux의 이해도 향상 \n - Vue와 React의 차이에 대한 이해도 향상 \n - 컴포넌트 모듈화를 통한 재사용성 향상 기술 습득 \n - 빅데이터 분산 트랙 우수상 수여",
          "- Git-flow \n 해당 프로젝트에서는 Git-flow 전략을 사용하며 기능 개발과 버그 수정 등을 분업화하여 진행함으로써 이전보다 더욱 안정적으로 버전 관리를 할 수 있었습니다. \n\n - Prettier & Airbnb Convention \n 해당 프로젝트에서 개발 코드의 일관성을 유지하고 가독성을 높이며 유지보수를 용이하게 할 수 있도록 Prettier와 Airbnb Convention을 이용해 개발하였습니다. \n 덕분에 코드 리뷰를 진행하는 시간이 단축되었으며 팀원이 기능 구현을 한 부분도 쉽게 유지보수를 진행할 수 있었습니다. \n\n - 기술 공유 \n 같은 프로젝트를 진행하더라도, 각자 구현한 기능이 다르기 때문에 바쁜 일정 속에서 관심을 갖지 않으면 그냥 지나칠 수 있을 것이라고 생각했습니다. \n 이에 저는 팀원들과 함께 주기적으로 기술을 공유하는 시간을 가졌고, 이러한 기술 공유 시간을 통해 팀원들의 역량 향상과 더 나은 문제 해결 방법을 찾는데 도움이 되었습니다."
        ]
      }
    }
  ]
}
